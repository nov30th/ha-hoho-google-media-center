[
    {
        "id": "58ff70b9.a6b58",
        "type": "random-item",
        "z": "13ac7585.18210a",
        "name": "",
        "input": "payload",
        "inputType": "msg",
        "output": "payload",
        "outputType": "msg",
        "number": "20",
        "x": 730,
        "y": 80,
        "wires": [
            [
                "143859dc.b68516"
            ]
        ]
    },
    {
        "id": "a1220b1d.bf98d8",
        "type": "api-call-service",
        "z": "13ac7585.18210a",
        "name": "",
        "server": "f25fc2a7.50d81",
        "version": 1,
        "debugenabled": false,
        "service_domain": "media_player",
        "service": "play_media",
        "entityId": "media_player.home_group",
        "data": "post_data",
        "dataType": "jsonata",
        "mergecontext": "",
        "output_location": "",
        "output_location_type": "none",
        "mustacheAltTags": false,
        "x": 970,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "143859dc.b68516",
        "type": "function",
        "z": "13ac7585.18210a",
        "name": "deal with url",
        "func": "file_name = \"\";\nfile_names = msg.payload;\nif (!Array.isArray(file_names))\n    file_names = new Array(file_names);\nif (file_names.length < 20 || global.get(\"hohoFavoriteSong\") == undefined){\n    file_name = file_names[0];\n    msg.played = [];\n}else{\n    i = 0;\n    data = global.get(\"hohoFavoriteSong\");\n    msg.played = data.played;\n    for(i = 0; i < file_names.length; i++){\n        file_name = file_names[i];\n        if (msg.played.includes(file_name))\n            continue;\n        msg.played.push(file_name);\n        break;\n    }\n    if (i >= file_names.length){\n        msg.played = [];\n    }\n}\nfile_name = file_name.replace(msg.playlist_path,\"\");\n//msg.local_file_name = file_name;\nmsg.filename = msg.playlist_path + file_name;\nmsg.pure_file_name = msg.filename.split(\"/\").pop();\nsong_title = msg.pure_file_name;\nmsg.file_exts.forEach(ext=>song_title=song_title.replace(ext,\"\"))\nmedia_file_name = \"/media/\" + msg.playlist_path.replace(\n    msg.media_root_path,\n    msg.media_root_name)\n    + file_name;\nmsg.file_name = file_name;\nmsg.song_title = song_title;\nmsg.post_data = {\"media_content_id\":media_file_name,\"media_content_type\":\"audio/mp3\"}\nmsg.post_data[\"extra\"] ={\"metadata\": {\"metadataType\":3,\"title\":song_title}}\nglobal.set(\"hohoFavoriteSong\",msg);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 910,
        "y": 80,
        "wires": [
            [
                "e0e8e448.a65c98",
                "4374fd33.f4ea24"
            ]
        ]
    },
    {
        "id": "3c129312.d5241c",
        "type": "server-state-changed",
        "z": "13ac7585.18210a",
        "name": "media player device",
        "server": "f25fc2a7.50d81",
        "version": 1,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "media_player.home_group",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "idle",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "x": 130,
        "y": 300,
        "wires": [
            [
                "d843e68c.f24a38",
                "7413df63.0ef85"
            ],
            [
                "d843e68c.f24a38",
                "f8166d46.7ad51"
            ]
        ]
    },
    {
        "id": "f4ccfdb9.d779d",
        "type": "api-current-state",
        "z": "13ac7585.18210a",
        "name": "Check music time button state",
        "server": "f25fc2a7.50d81",
        "version": 1,
        "outputs": 2,
        "halt_if": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "override_topic": false,
        "entity_id": "input_boolean.music_time",
        "state_type": "str",
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "blockInputOverrides": false,
        "x": 170,
        "y": 180,
        "wires": [
            [
                "d0b8c29b.4f194"
            ],
            []
        ]
    },
    {
        "id": "49b79303.897c5c",
        "type": "server-state-changed",
        "z": "13ac7585.18210a",
        "name": "music time button state",
        "server": "f25fc2a7.50d81",
        "version": 1,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "input_boolean.music_time",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "x": 140,
        "y": 360,
        "wires": [
            [
                "d0b8c29b.4f194",
                "d843e68c.f24a38",
                "acde7d7d.fc4ab"
            ],
            [
                "79e1fcf2.fdd3c4",
                "d843e68c.f24a38"
            ]
        ]
    },
    {
        "id": "52d23ddf.ff4954",
        "type": "api-call-service",
        "z": "13ac7585.18210a",
        "name": "",
        "server": "f25fc2a7.50d81",
        "version": 1,
        "debugenabled": false,
        "service_domain": "media_player",
        "service": "turn_off",
        "entityId": "media_player.home_group",
        "data": "",
        "dataType": "jsonata",
        "mergecontext": "",
        "output_location": "",
        "output_location_type": "none",
        "mustacheAltTags": false,
        "x": 160,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "a232d975.043968",
        "type": "api-call-service",
        "z": "13ac7585.18210a",
        "name": "off music",
        "server": "f25fc2a7.50d81",
        "version": 1,
        "debugenabled": false,
        "service_domain": "input_boolean",
        "service": "turn_off",
        "entityId": "input_boolean.music_time",
        "data": "",
        "dataType": "jsonata",
        "mergecontext": "",
        "output_location": "",
        "output_location_type": "none",
        "mustacheAltTags": false,
        "x": 560,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "d0b8c29b.4f194",
        "type": "api-current-state",
        "z": "13ac7585.18210a",
        "name": "load playlist",
        "server": "f25fc2a7.50d81",
        "version": 1,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "override_topic": false,
        "entity_id": "input_select.music_playlist",
        "state_type": "str",
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "blockInputOverrides": false,
        "x": 130,
        "y": 100,
        "wires": [
            [
                "40412deb.dc30c4"
            ]
        ]
    },
    {
        "id": "40412deb.dc30c4",
        "type": "function",
        "z": "13ac7585.18210a",
        "name": "PLAYLIST mapping",
        "func": "//***********************\n//Made by HOHO``(Nov30th) \n//Github: https://github.com/nov30th/ha-hoho-google-media-center\n//***********************\n\n//You can now fully edit the mapping list,\n//also can remove the \"My Favorite\" if you don't want this feature,\n//otherwise you need to keep \"My Favorite\" with an exist write accessible path with fav button working.\n\n//============THE CONFIG AREA=============\n\n//For Robert and someone who has different mounting point\n//e.g. if you have \"music: /config/media\" in \"media_dirs:\", put it here\n//one media_dirs mapping only\none_media_dirs_in_ha_conf = \"music: /config/media\"\n\n//The playlist path mapping, you can edit them to yours.\n//values are relative path under the one_media_dirs_in_ha_conf\n//e.g. I have /config/media/mp3/ and /config/media/favorite_mp3/\n//Make sure the key name exists in input_select.music_playlist\n\nplaylist_mapping = {\n    \"Mp3\":\"mp3/\",\n    \"My Favorite\":\"favorite_mp3/\",\n};\n//Temp album cover file location\nmsg.album_cover_temp_file = \"/config/www/album_cover_temp.jpg\";\n//The URL of album cover file\nmsg.album_cover_temp_url = \"https[OR HTTP]://[YOUR HA DOMAIN OR IP]/local/album_cover_temp.jpg?\" + Math.random();\n//The file type you willing to shuffle\nfile_exts_filter = [\"ogg\",\"mp3\"];\n//Whether fixes the issue of HA media_player, need write accessible with mp3 folders\n//Turn off this option will skip these unsupport file names,\n//If files in your folder are all unsupport file names, it may makes this flow script loop.\nmsg.fix_ha_media_player = true;\n//Whether read the metadata in music file push to media_player instead of filenames.\nmsg.rich_info_support = true;\n//============END CONFIG AREA=============\n\n\n\nObject.map = function(o, f, ctx) {\n    ctx = ctx || this;\n    var result = {};\n    Object.keys(o).forEach(function(k) {\n        result[k] = f.call(ctx, o[k], k, o); \n    });\n    return result;\n}\n\none_media_dirs_in_ha_conf = one_media_dirs_in_ha_conf.replace(\" \",\"\").split(':');\nmsg.media_root_name = one_media_dirs_in_ha_conf[0];\nmsg.media_root_path = one_media_dirs_in_ha_conf[1];\nplaylist_mapping = Object.map(playlist_mapping, function(v, k, playlist_mapping) {\n     return msg.media_root_path + '/' + v;\n  });\n// msg.playlist_mapping = playlist_mapping.map((key,value)=>value=media_root_path+value);\npath = playlist_mapping[msg.payload];\nmsg.playlist_path = path;\nmsg.playlist_name = msg.payload;\nmsg.file_exts = file_exts_filter.map(item=>\".\"+item);\nmsg.payload = {\"start\":path,\"pattern\": file_exts_filter.map(item=>\"*.\"+item).join(\",\")};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 330,
        "y": 100,
        "wires": [
            [
                "42dc6497.38688c",
                "4374fd33.f4ea24"
            ]
        ]
    },
    {
        "id": "7b2ec18b.535d5",
        "type": "fs-ops-access",
        "z": "13ac7585.18210a",
        "name": "is fav file exists",
        "path": "playlist_mapping[\"My Favorite\"]",
        "pathType": "msg",
        "filename": "pure_file_name",
        "filenameType": "msg",
        "read": true,
        "write": false,
        "throwerror": false,
        "x": 840,
        "y": 440,
        "wires": [
            [
                "57cfe80c.d29f58"
            ],
            [
                "dde1a78a.b45c58"
            ]
        ]
    },
    {
        "id": "57cfe80c.d29f58",
        "type": "api-call-service",
        "z": "13ac7585.18210a",
        "name": "fav button on",
        "server": "f25fc2a7.50d81",
        "version": 1,
        "debugenabled": false,
        "service_domain": "input_boolean",
        "service": "turn_on",
        "entityId": "input_boolean.favorite_song",
        "data": "",
        "dataType": "jsonata",
        "mergecontext": "",
        "output_location": "",
        "output_location_type": "none",
        "mustacheAltTags": false,
        "x": 1030,
        "y": 420,
        "wires": [
            [
                "a1220b1d.bf98d8"
            ]
        ]
    },
    {
        "id": "dde1a78a.b45c58",
        "type": "api-call-service",
        "z": "13ac7585.18210a",
        "name": "fav button off",
        "server": "f25fc2a7.50d81",
        "version": 1,
        "debugenabled": false,
        "service_domain": "input_boolean",
        "service": "turn_off",
        "entityId": "input_boolean.favorite_song",
        "data": "",
        "dataType": "jsonata",
        "mergecontext": "",
        "output_location": "",
        "output_location_type": "none",
        "mustacheAltTags": false,
        "x": 1030,
        "y": 480,
        "wires": [
            [
                "a1220b1d.bf98d8"
            ]
        ]
    },
    {
        "id": "b4a41b7a.44c238",
        "type": "get media tags",
        "z": "13ac7585.18210a",
        "name": "",
        "filename": "",
        "x": 1060,
        "y": 220,
        "wires": [
            [
                "45a93ed0.bd55a"
            ]
        ]
    },
    {
        "id": "45a93ed0.bd55a",
        "type": "function",
        "z": "13ac7585.18210a",
        "name": "",
        "func": "if (msg.payload != undefined && msg.payload.error != undefined){\n    return msg;\n}\nmetadata = msg.post_data[\"extra\"][\"metadata\"];\nif (msg.payload.tags != undefined){\n    tags = msg.payload.tags;\n    if (tags.title != undefined)\n        metadata['title'] = tags.title;\n        \n    if (tags.artist != undefined)\n        metadata['artist'] = tags.artist;\n        \n    if (tags.album != undefined)\n        metadata['albumName'] = tags.album;\n        \n    if (tags.track != undefined)\n        metadata['trackNumber'] = tags.track;\n        \n    if (tags.year != undefined)\n        metadata['releaseDate'] = tags.year;\n        \n    if (tags.picture != undefined){\n        msg.image = \"yes\";\n        msg.payload = new Buffer(tags.picture.data);\n        msg.filename = msg.album_cover_temp_file;\n        metadata['images'] = [{\"url\":msg.album_cover_temp_url}];\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 800,
        "y": 300,
        "wires": [
            [
                "772e70e0.a6915"
            ]
        ]
    },
    {
        "id": "772e70e0.a6915",
        "type": "switch",
        "z": "13ac7585.18210a",
        "name": "album image",
        "property": "image",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 950,
        "y": 300,
        "wires": [
            [
                "a0d08060.d0d02"
            ],
            [
                "671fb776.567298"
            ]
        ]
    },
    {
        "id": "a0d08060.d0d02",
        "type": "file",
        "z": "13ac7585.18210a",
        "name": "",
        "filename": "",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1090,
        "y": 300,
        "wires": [
            [
                "671fb776.567298"
            ]
        ]
    },
    {
        "id": "e0e8e448.a65c98",
        "type": "switch",
        "z": "13ac7585.18210a",
        "name": "",
        "property": "file_name",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "..",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "~",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "%",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 4,
        "x": 550,
        "y": 160,
        "wires": [
            [
                "3ad7f029.41ae7"
            ],
            [
                "3ad7f029.41ae7"
            ],
            [
                "3ad7f029.41ae7"
            ],
            [
                "ab487f06.1ca8f"
            ]
        ]
    },
    {
        "id": "3ad7f029.41ae7",
        "type": "function",
        "z": "13ac7585.18210a",
        "name": "remove spec chars",
        "func": "file_name = msg.file_name;\nwhile(file_name.includes(\"..\"))\n    file_name = file_name.replace(\"..\",\"__\");\nwhile(file_name.includes(\"%\"))\n    file_name = file_name.replace(\"%\",\"\");\nwhile(file_name.includes(\"~\"))\n    file_name = file_name.replace(\"~\",\"-\");\nmsg.to_file_name = file_name;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 790,
        "y": 160,
        "wires": [
            [
                "a755d594.3a3fe8"
            ]
        ]
    },
    {
        "id": "258b4fb3.d95b7",
        "type": "fs-ops-move",
        "z": "13ac7585.18210a",
        "name": "move file",
        "sourcePath": "playlist_path",
        "sourcePathType": "msg",
        "sourceFilename": "file_name",
        "sourceFilenameType": "msg",
        "destPath": "playlist_path",
        "destPathType": "msg",
        "destFilename": "to_file_name",
        "destFilenameType": "msg",
        "link": false,
        "x": 1140,
        "y": 160,
        "wires": [
            [
                "42dc6497.38688c"
            ]
        ]
    },
    {
        "id": "42dc6497.38688c",
        "type": "fs-file-lister",
        "z": "13ac7585.18210a",
        "name": "",
        "start": "Vincent Qiu",
        "pattern": "by HOHO``",
        "folders": "*",
        "hidden": false,
        "lstype": "files",
        "path": true,
        "single": true,
        "depth": "5",
        "stat": false,
        "showWarnings": true,
        "x": 540,
        "y": 80,
        "wires": [
            [
                "58ff70b9.a6b58"
            ]
        ]
    },
    {
        "id": "671fb776.567298",
        "type": "switch",
        "z": "13ac7585.18210a",
        "name": "fav enabled?",
        "property": "playlist_mapping[\"My Favorite\"]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 810,
        "y": 360,
        "wires": [
            [
                "7b2ec18b.535d5"
            ],
            [
                "a1220b1d.bf98d8"
            ]
        ]
    },
    {
        "id": "79e1fcf2.fdd3c4",
        "type": "api-current-state",
        "z": "13ac7585.18210a",
        "name": "if media player is playing",
        "server": "f25fc2a7.50d81",
        "version": 1,
        "outputs": 2,
        "halt_if": "playing",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "override_topic": false,
        "entity_id": "media_player.home_group",
        "state_type": "str",
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "blockInputOverrides": false,
        "x": 170,
        "y": 440,
        "wires": [
            [
                "52d23ddf.ff4954"
            ],
            []
        ]
    },
    {
        "id": "8e95060b.c023e8",
        "type": "api-current-state",
        "z": "13ac7585.18210a",
        "name": "button is on?",
        "server": "f25fc2a7.50d81",
        "version": 1,
        "outputs": 2,
        "halt_if": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "override_topic": false,
        "entity_id": "input_boolean.music_time",
        "state_type": "str",
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "blockInputOverrides": false,
        "x": 570,
        "y": 300,
        "wires": [
            [
                "a232d975.043968"
            ],
            []
        ]
    },
    {
        "id": "a755d594.3a3fe8",
        "type": "switch",
        "z": "13ac7585.18210a",
        "name": "fix filename",
        "property": "fix_ha_media_player",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 970,
        "y": 160,
        "wires": [
            [
                "258b4fb3.d95b7"
            ],
            [
                "42dc6497.38688c"
            ]
        ]
    },
    {
        "id": "ab487f06.1ca8f",
        "type": "switch",
        "z": "13ac7585.18210a",
        "name": "rich info?",
        "property": "rich_info_support",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 760,
        "y": 200,
        "wires": [
            [
                "b4a41b7a.44c238"
            ],
            [
                "671fb776.567298"
            ]
        ]
    },
    {
        "id": "d843e68c.f24a38",
        "type": "debug",
        "z": "13ac7585.18210a",
        "d": true,
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 320,
        "wires": []
    },
    {
        "id": "7413df63.0ef85",
        "type": "switch",
        "z": "13ac7585.18210a",
        "name": "if prev status playing",
        "property": "data.old_state.state",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "playing",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "on",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 140,
        "y": 240,
        "wires": [
            [
                "f4ccfdb9.d779d"
            ],
            [
                "f4ccfdb9.d779d"
            ]
        ]
    },
    {
        "id": "acde7d7d.fc4ab",
        "type": "function",
        "z": "13ac7585.18210a",
        "name": "last button on timestamp",
        "func": "flow.set(\"last_on\",Math.floor(Date.now() / 1000));\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 410,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "f8166d46.7ad51",
        "type": "function",
        "z": "13ac7585.18210a",
        "name": "button on time check",
        "func": "if (msg.payload != \"off\" \n    && msg.payload != \"paused\"\n    && msg.payload != \"unknown\"\n    ){\n    msg.inv = msg.payload;\n    return [null,msg];\n}\nif (flow.get(\"last_on\") !== undefined){\n    inv = Math.floor(Date.now() / 1000) - flow.get(\"last_on\")\n    if (inv > 5){\n        msg.inv = inv;\n        return [msg,null];\n        }\n    else{\n        msg.inv = \"last_on undefined\"\n        return [null,msg];\n        }\n}\nmsg.inv = \"not exist\";\nreturn [msg,null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 440,
        "y": 240,
        "wires": [
            [
                "8e95060b.c023e8"
            ],
            []
        ]
    },
    {
        "id": "4374fd33.f4ea24",
        "type": "debug",
        "z": "13ac7585.18210a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 600,
        "wires": []
    },
    {
        "id": "8d4ea383.c8183",
        "type": "inject",
        "z": "13ac7585.18210a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 40,
        "wires": [
            [
                "d0b8c29b.4f194"
            ]
        ]
    },
    {
        "id": "f25fc2a7.50d81",
        "type": "server",
        "name": "Home Assistant"
    }
]